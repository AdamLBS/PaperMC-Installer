#!/bin/bash
if [ "$EUID" -ne 0 ] # Check if the user is root
  then echo "Please run as root or with sudo"
  exit
fi
LATEST_VERSION=$(curl -s 'https://uploads.admlbs.fr/version')
command=$1
ACTUAL_VERSION=1.0
SCRIPT_NAME="/usr/bin/mcinstall"
NEW_FILE="/tmp/mcinstall"
#################################################################################### Functions ##################################################
spigot_install () {
    dossier_spigotinstall=$(whiptail --title "McInstall" --inputbox "In which directory do you want to install your Bungeecord server? (Example: /home/bungee and no /home/bungee/)" 10 60  3>&1 1>&2 2>&3)
cd $dossier_spigotinstall 2> /dev/null

cd $dossier_spigotinstall 2> /dev/null

if cd $dossier_spigotinstall 2> /dev/null; then echo " "  ; else echo -e "\e[32mThe folder does not exist, so we created it.\e[0m" && mkdir -p $dossier_spigotinstall ; fi 
cd /tmp/minecraftinstall_files/
OPTION=$(whiptail --nocancel --title "McInstall" --menu "Choose your version (with the keyboard arrows and then enter) By installing Spigot you agree with Spigot's and Mojang's EULA." 15 60 4 \
"1" "1.8.8" \
"2" "1.9.4" \
"3" "1.10.2" \
"4" "1.11.2" \
"5" "1.12.2" \
"6" "1.13 (BETA)" 3>&1 1>&2 2>&3)

if [ "$OPTION" = 1 ]; then
      use_buildtools_en_gui 1.8.8
else


if [ "$OPTION" = 2 ]; then
     use_buildtools_en_gui 1.9.4
else
  if [ "$OPTION" = 3 ]; then
        use_buildtools_en_gui 1.10.2
else
  if [ "$OPTION" = 4 ]; then
        use_buildtools_en_gui 1.11.2
else
  if [ "$OPTION" = 5 ]; then
        use_buildtools_en_gui 1.12.2
else 
  if [ "$OPTION" = 6 ]; then
        use_buildtools_en_gui 1.13
fi

fi

fi

fi

fi

fi
cp /tmp/minecraftinstall_files/launch.sh $dossier_spigotinstall/launch.sh
cp /tmp/minecraftinstall_files/eula.txt $dossier_spigotinstall/eula.txt
servername=$(whiptail --title "McInstall" --inputbox "Choose your server's name. (Ex : server, server1 or server2)" 10 60  3>&1 1>&2 2>&3)
    RAM=$(whiptail --title "McInstall" --inputbox "How much RAM do you want to allow ? (Express it in G or M, Example : 2G or 2000M )" 10 60  3>&1 1>&2 2>&3)
sed -i "s/2G/$RAM /g" $dossier_spigotinstall/launch.sh
sed -i "s/server/$servername /g" $dossier_spigotinstall/launch.sh
echo "Directory : $dossier_spigotinstall" >> $dossier_spigotinstall/INFORMATIONS.txt
echo "Allowed RAM : $RAM" >> $dossier_spigotinstall/INFORMATIONS.txt
echo "To view the console type the command : screen -r server" >> $dossier_spigotinstall/INFORMATIONS.txt
echo "To quit the console without stop the server please TYPE CTRL+A and CTRL+D" >> $dossier_spigotinstall/INFORMATIONS.txt;
cd $dossier_spigotinstall
sh $dossier_spigotinstall/launch.sh 
}
updatercheck_when_install () { #VERSION OF THE UPDATER WHEN HE'S AUTO-LAUNCHED WITH THE INSTALL COMMAND OF THE SCRIPT 
    if [ "$ACTUAL_VERSION" == "$LATEST_VERSION" ] 
    then :
    else 
  read  -p "You do not have the latest version of the program. We advise you to update it as soon as possible. Type y to start the update. (y or n)" doit 
case $doit in  
  n|N) echo -e "You refused to update the program." && exit ;; 
  y|Y) echo -e "\e[32mLoading updater.\e[0m" ;;
  *) echo  "Please type y (yes) or n (no)" && exit ;; 
esac  
	curl https://uploads.admlbs.fr/download.php?file=mcinstall_updater --output /tmp/mcinstall # Download latest version
check_upgrade # Update the script by itself 
    fi
}



check_upgrade () { 


  [ -f "$NEW_FILE" ] && {


    cp "$NEW_FILE" "$SCRIPT_NAME"
    chmod 0777 "$SCRIPT_NAME"
    rm -f "$NEW_FILE"

clear
echo "The script have been updated"
    exit 0
  }
}
updater_check () {
    if [ "$ACTUAL_VERSION" == "$LATEST_VERSION" ] 
    then echo "Already last version."
    else 
  read  -p "You do not have the latest version of the program. We advise you to update it as soon as possible. Type y to start the update. (y or n)" doit 
case $doit in  
  n|N) echo -e "You refused to update the program." && exit ;; 
  y|Y) echo -e "\e[32mLoading updater.\e[0m" ;;
  *) echo  "Please type y (yes) or n (no)" && exit ;; 
esac  
	curl https://uploads.admlbs.fr/download.php?file=mcinstall_updater --output /tmp/mcinstall
check_upgrade
    fi
}
download_prerequis_vb () { #DOWNLOAD PREREQUIS FILE
rm --recursive /tmp/minecraftinstall_files
mkdir /tmp/minecraftinstall_files/
curl https://uploads.admlbs.fr/download.php?file=prerequis --output /tmp/minecraftinstall_files/prerequis
curl https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar --output /tmp/minecraftinstall_files/BuildTools.jar
curl https://uploads.admlbs.fr/download.php?file=buildtools2.bash --output /tmp/minecraftinstall_files/buildtools2.bash
curl https://uploads.admlbs.fr/download.php?file=launch.sh --output /tmp/minecraftinstall_files/launch.sh
curl https://uploads.admlbs.fr/download.php?file=eula.txt --output /tmp/minecraftinstall_files/eula.txt

chmod 0777 --recursive /tmp/minecraftinstall_files
git config --global --unset core.autocrlf
cd /tmp/minecraftinstall_files/

}
use_buildtools_en_gui () {
screen -dm java -jar BuildTools.jar --rev $1
# Keep checking if the process is running. And keep a count.
{
        percentage="0"
        while (true)
        do
            proc=$(ps aux | grep -v grep | grep -e "BuildTools")
            if [[ "$proc" == "" ]] && [[ "$percentage" -eq "0" ]];
            then
                break;
            elif [[ "$proc" == "" ]] && [[ "$percentage" -gt "0" ]];
            then
                sleep 2
                echo 98
                sleep 1
                echo 99
                sleep 1
                echo 100
                sleep 1
                break;
            elif [[ "51" -eq "$percentage" ]]
            then
                percentage="30"
            fi
            sleep 1
            echo $percentage
            percentage=$(expr $percentage + 1)
        done
} | whiptail --title "McInstall" --gauge "Compile the version of Spigot ($1) you want to install. It can take time. Please do not close the script." 8 78 0
cp /tmp/minecraftinstall_files/spigot-$1.jar $dossier_spigotinstall/spigot.jar
}


bungeecord_install() {
dossier_bungeeinstall=$(whiptail --title "McInstall" --inputbox "In which directory do you want to install your Bungeecord server? (Example: /home/bungee and no /home/bungee/)" 10 60  3>&1 1>&2 2>&3)
cd $dossier_bungeeinstall 2> /dev/null

if cd $dossier_bungeeinstall 2> /dev/null; then echo " "  ; else echo -e "\e[32mThe folder does not exist, so we created it.\e[0m" && mkdir -p $dossier_bungeeinstall ; fi

cd $dossier_bungeeinstall
if (whiptail --title "McInstall" --yes-button "I agree" --no-button "I disagree" --yesno "The script will install the latest version of BungeeCord using the official Spigot's official Jenkins page. That means your machine will download the BungeeCord.jar and the prerequisites itself. This operation may take time depends of your Internet connexion. By continuing you accept the  Spigot's and Mojang's EULAs." 20 80) then
screen -dm bash -c 'wget https://ci.md-5.net/job/BungeeCord/lastSuccessfulBuild/artifact/bootstrap/target/BungeeCord.jar; wget https://ci.md-5.net/job/BungeeCord/lastSuccessfulBuild/artifact/module/cmd-alert/target/cmd_alert.jar; wget https://ci.md-5.net/job/BungeeCord/lastSuccessfulBuild/artifact/module/cmd-find/target/cmd_find.jar; wget https://ci.md-5.net/job/BungeeCord/lastSuccessfulBuild/artifact/module/cmd-list/target/cmd_list.jar; wget https://ci.md-5.net/job/BungeeCord/lastSuccessfulBuild/artifact/module/cmd-send/target/cmd_send.jar; wget https://ci.md-5.net/job/BungeeCord/lastSuccessfulBuild/artifact/module/cmd-server/target/cmd_server.jar; wget https://ci.md-5.net/job/BungeeCord/lastSuccessfulBuild/artifact/module/reconnect-yaml/target/reconnect_yaml.jar; curl https://uploads.admlbs.fr/download.php?file=launch_bungee.sh --output launch.sh;'

cd $dossier_bungeeinstall

{
        percentage="0"
        while (true)
        do
            proc=$(ps aux | grep -v grep | grep -e "wget")
            if [[ "$proc" == "" ]] && [[ "$percentage" -eq "0" ]];
            then
                break;
            elif [[ "$proc" == "" ]] && [[ "$percentage" -gt "0" ]];
            then
                sleep 2
                echo 98
                sleep 1
                echo 99
                sleep 1
                echo 100
                sleep 1
                break;
            elif [[ "51" -eq "$percentage" ]]
            then
                percentage="30"
            fi
            sleep 1
            echo $percentage
            percentage=$(expr $percentage + 1)
        done
} | whiptail --title "McInstall" --gauge "Downloading files...." 8 78 0
RAM=$(whiptail --title "McInstall" --inputbox "How much RAM do you want to allow ? (Express it in G or M, Example : 2G or 2000M )" 10 60  3>&1 1>&2 2>&3)
sed -i "s/2G/$RAM /g" $dossier_bungeeinstall/launch.sh
echo "Directory : $dossier_bungeeinstall" >> $dossier_bungeeinstall/INFORMATIONS.txt
echo "Allowed RAM : $RAM" >> $dossier_bungeeinstall/INFORMATIONS.txt
echo "To view the console type the command : screen -r bungee" >> $dossier_bungeeinstall/INFORMATIONS.txt
echo "To quit the console without stop the server please TYPE CTRL+A and CTRL+D" >> $dossier_bungeeinstall/INFORMATIONS.txt;
else
  clear && exit 0 
fi

}

spigotbungee_install () {
whiptail --title "McInstall" --msgbox "The script will first install Bungeecord and then install Spigot." 20 80
bungeecord_install
whiptail --title "McInstall" --msgbox "All the BungeeCord's files have been downloaded. Because you've choose to install both Bungee and Spigot, the server will not be stared by the script. All the configurations files and other files are stored in $dossier_bungeeinstall" 20 80
whiptail --title "McInstall" --msgbox "Command to launch the server : sh $dossier_bungeeinstall/launch.sh
To view the console : screen -r bungee
All of this informations are available in the INFORMATIONS.txt file." 20 80
spigot_install
whiptail --title "McInstall" --msgbox "All the Spigot's files have been downloaded.Because you've choose to install both Bungee and Spigot, the server will not be stared by the script. All the configurations files and other files are stored in $dossier" 20 80
whiptail --title "McInstall" --msgbox "Command to launch the server : sh $dossier/launch.sh
To view the console : screen -r $servername
All of this informations are available in the INFORMATIONS.txt file." 20 80

}
help_message () {
    echo "              McInstall Commands"
echo "          info : Show infos about the script"
echo "          update : Update the script"
echo "          install : Installs a bungee or spigot server"
echo "          help : Show this message"
}
######################################################################################################################################





if [ "$command" ==  "" ];
then 
help_message
else
  if [ "$command" == "help" ]; then
help_message
else 
if [ "$command" ==  "install" ];
 then
  updatercheck_when_install
    echo "--------------------------------------- McInstall -------------------------------"
    download_prerequis_vb
    bash -c './prerequis  >/dev/null 2>&1'
{
        i="0"
        while (true)
        do
            proc=$(ps aux | grep -v grep | grep -e "apt")
            if [[ "$proc" == "" ]]; then break; fi
            sleep 1
            echo $i
            i=$(expr $i + 1)
        done
        
        echo 100
        sleep 2
} | whiptail --title "McInstall" --gauge "Installing prerequisite packages" 8 78 0
clear
echo -e "\033[32m===================================== Installation =====================================\e[0m"
echo -e "\033[33m===================================== Server type =======================================\e[0m"
OPTION=$(whiptail --nocancel --title "McInstall" --menu "Which type of server do you want to install ?" 15 60 4 \
"1" "Spigot only" \
"2" "Bungeecord only" \
"3" "Spigot and bungeecord" 3>&1 1>&2 2>&3)

if [ "$OPTION" = 1 ]; then
      spigot_install
else


if [ "$OPTION" = 2 ]; then
     bungeecord_install
     whiptail --title "McInstall" --msgbox "All the BungeeCord's files have been downloaded. The script will start the server for the first time. All the configurations files and other files are stored in $dossier" 20 80
whiptail --title "McInstall" --msgbox "Command to launch the server : sh $dossier_bungeeinstall/launch.sh
To view the console : screen -r bungee
All of this informations are available in the INFORMATIONS.txt file." 20 80
cd $dossier_bungeeinstall
sh $dossier_bungeeinstall/launch.sh
else
  if [ "$OPTION" = 3 ]; then
        spigotbungee_install
cd $dossier
sh $dossier/launch.sh
fi

fi

fi

fi
  if [ "$command" == "info" ]; then
    echo "------------------------------- McInstall -------------------------------"
echo -e "\033[32m===================================== Infos =====================================\e[0m"
echo "Version : $ACTUAL_VERSION Latest Version : $LATEST_VERSION"
echo "Developper : Adam - LaaBaSe"
echo "Contact : adam@laabase.ovh"
updater_check
fi

  if [ "$command" == "update" ]; then
updater_check
else
  if [ "$command" == "$command" ]; then
help_message
fi
fi
fi
fi
